---
name: CI

"on":
  push:
    branches: [main, master]
  pull_request:
    branches: ["**"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies (dev)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install pytest pytest-cov pyyaml jsonschema ruff black mypy yamllint pre-commit fastapi requests
          fi

      - name: Pre-commit
        run: |
          pre-commit run --show-diff-on-failure --color always --all-files
          run: mypy --no-install-types .

      - name: Router config schema validation (pytest -k schema)
        if: hashFiles('router/router.yaml') != ''
        run: |
          pytest -q -k schema --maxfail=1

      - name: Run tests
        run: |
          pytest -q --cov=./ --cov-report=term-missing

      - name: Validate stack (optional)
        if: hashFiles('garvis_validate.py') != ''
        run: |
          # Donâ€™t fail CI if the optional validator needs a live stack.
          python garvis_validate.py || true
